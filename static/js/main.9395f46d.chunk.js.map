{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Wrapper","Title","Section","title","children","StyledContainer","Container","StyledForm","InputContainer","Input","Label","Button","ContactForm","state","contacts","name","number","nameInputId","nanoid","telInputId","contactId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","id","type","onChange","pattern","autoComplete","placeholder","maxLength","required","htmlFor","size","Component","propTypes","PropTypes","string","isRequired","func","List","Item","ContactList","onDeleteContact","map","onClick","Filter","filterInputId","target","App","filter","checkContact","includedName","find","contact","toLowerCase","includedNumber","replace","Swal","fire","position","icon","toUpperCase","confirmButtonColor","deleteContact","handleFormSubmit","prevState","handleFilterInputChange","filteredContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9395f46d.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Wrapper = styled.section`\r\npadding: 40px 0;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-bottom: 50px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\n\r\ntext-transform: uppercase;\r\nfont-size: 32px;\r\ntext-align: center;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Title } from \"./Section.styled\";\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <Wrapper>\r\n      {title && <Title>{title}</Title>}\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const StyledContainer = styled.div`\r\nwidth: 800px;\r\nmargin: 0 auto;\r\npadding: 30px;\r\nborder-radius: 5px;\r\nbox-shadow: rgba(0, 0, 0, 0.5) 0 0 10px 5px;\r\n\r\nbackground-color: var(--color-bg);\r\n\r\n& h1,\r\nh2 {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    color: var(--color-dark);\r\n\r\n    & svg {\r\n        margin-right: 10px;\r\n    }\r\n}\r\n\r\n& h1 {\r\n    font-size: 40px;\r\n    margin-bottom: 40px;\r\n}\r\n\r\n& h2 {\r\n    font-size: 28px;\r\n    margin-bottom: 60px;\r\n}\r\n`;","import PropTypes from \"prop-types\";\r\nimport { StyledContainer } from \"./Container.styled\";\r\n\r\nexport const Container = ({ children }) => {\r\n  return <StyledContainer>{children}</StyledContainer>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 450px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding-left: 30px;\r\n  border: none;\r\n  border-bottom: 1px solid tan;\r\n  font-size: 20px;\r\n  color: var(--color-accent);\r\n  background-color: transparent;\r\n  &::placeholder {\r\n    opacity: 0;\r\n    color: var(--color-accent);\r\n    transition: opacity 250ms ease;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: var(--color-accent);\r\n    &::placeholder {\r\n      opacity: 0.7;\r\n      transition-delay: 250ms;\r\n    }\r\n  }\r\n  &:focus + label,\r\n  &:not(:placeholder-shown) + label {\r\n    transform: translate(-32px, -30px);\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    color: var(--color-accent);\r\n    & svg {\r\n      color: var(--color-accent);\r\n      transform: translate(32px, 30px);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  cursor: text;\r\n  font-size: 20px;\r\n  color: var(--color-light);\r\n  transition: color 250ms ease-in-out, transform 250ms ease-in-out;\r\n  & svg {\r\n    margin-right: 10px;\r\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  border: 2px solid tan;\r\n  border-radius: 4px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  color: var(--color-light);\r\n  background-color: transparent;\r\n  transition: all 250ms ease-in-out;\r\n  &:hover {\r\n    border-color: var(--color-accent);\r\n    color: var(--color-accent);\r\n  }\r\n  & svg {\r\n    margin-right: 10px;\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Component } from \"react\";\r\nimport {\r\n  StyledForm,\r\n  InputContainer,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"./ContactForm.styled\";\r\nimport { FaUserSecret, FaPhone, FaUserPlus } from \"react-icons/fa\";\r\n\r\nexport class ContactForm extends Component {\r\n  state = { contacts: [], name: \"\", number: \"\" };\r\n\r\n  nameInputId = nanoid();\r\n  telInputId = nanoid();\r\n  contactId = nanoid();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <StyledForm onSubmit={this.handleSubmit}>\r\n        <InputContainer>\r\n          <Input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Valentin Demchuk\"\r\n            maxLength=\"40\"\r\n            required\r\n          />\r\n\r\n          <Label htmlFor={this.nameInputId}>\r\n            <FaUserSecret size=\"22\" />\r\n            Name\r\n          </Label>\r\n        </InputContainer>\r\n\r\n        <InputContainer>\r\n          <Input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"063-70-90-128\"\r\n            maxLength=\"17\"\r\n            required\r\n          />\r\n          <Label htmlFor={this.telInputId}>\r\n            <FaPhone size=\"22\" />\r\n            Number\r\n          </Label>\r\n        </InputContainer>\r\n\r\n        <Button type=\"submit\">\r\n          <FaUserPlus size=\"30\" />\r\n          add\r\n        </Button>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const List = styled.ul`\r\nborder-radius: 4px;\r\noverflow: hidden;\r\n`;\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\nwidth: 100%;\r\nmargin: 0 auto;\r\npadding: 10px 5 px;\r\nborder-bottom: 1px solid rosybrown;\r\n\r\n& span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n\r\n    font-weight: 600;\r\n    color: var(--color-dark);\r\n\r\n    &:first-of-type {\r\n        color: var(--color-accent);\r\n        margin-right: 10px;\r\n    }\r\n\r\n    & svg {\r\n        margin-right: 10px;\r\n        color: var(--color-title);\r\n}\r\n}\r\n\r\n& svg {\r\n    color: var(--color-title);\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\ndisplay: block;\r\nmargin-left: auto;\r\npadding: 10px;\r\nborder: none;\r\ncursor: pointer;\r\n\r\nbackground-color: transparent;\r\ntransition: all 250ms ease-in-out;\r\n\r\n&:hover {\r\n    color: var(--color-accent);\r\n    transform: scale(1.3);\r\n}\r\n`;","import PropTypes from \"prop-types\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\nimport { MdContactPhone } from \"react-icons/md\";\r\nimport { List, Item, Button } from \"./ContactList.styled\";\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <Item key={id}>\r\n            <span>\r\n              <MdContactPhone size=\"20\" />\r\n              {name}:\r\n            </span>\r\n            <span>{number}</span>\r\n            <Button\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n            >\r\n              <BsTrash size=\"20\" />\r\n            </Button>\r\n          </Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const InputContainer = styled.div`\r\nposition: relative;\r\nwidth: 100%;\r\nmargin-bottom: 40px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 40px;\r\nmargin-bottom: 40px;\r\npadding-left: 40px;\r\nborder: none;\r\nborder-bottom: 1px solid tan;\r\n\r\nfont-size: 20px;\r\ncolor: var(--color-accent);\r\nbackground-color: transparent;\r\n\r\ntransition: all 250ms ease-in-out;\r\n\r\n&::placeholder {\r\n    opacity: 0;\r\n\r\n    color: var(--color-accent);\r\n\r\n    transition: opacity 250ms ease;\r\n}\r\n\r\n&:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid var(--color-accent);\r\n\r\n    &::placeholder {\r\n        opacity: 0.7;\r\n        transition-delay: 250ms;\r\n    }\r\n}\r\n\r\n&:focus + label,\r\n&:not(:placeholder-shown) + label {\r\n    transform: translate(-36px, -30px);\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    color: var(--color-accent);\r\n\r\n    & svg {\r\n        color: var(--color-accent);\r\n        transform: translate(36px, 30px);\r\n    }\r\n}\r\n`;\r\n\r\nexport const Label = styled.label`\r\nposition: absolute;\r\nleft: 0;\r\nbottom: 5px;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-bottom: 5px;\r\ncursor: text;\r\n\r\nfont-size: 20px;\r\ncolor: tan;\r\n\r\ntransition: color 250ms ease-in-out, transform 250ms ease-in-out;\r\n\r\n& svg {\r\n    margin-right: 10px;\r\n    transition: color 250ms ease-in-out, transform 250ms ease-in-out;\r\n}\r\n`;","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\r\nimport { InputContainer, Input, Label } from \"./Filter.styled\";\r\n\r\nexport class Filter extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  filterInputId = nanoid();\r\n\r\n  handleChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    this.setState({ value });\r\n    this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <InputContainer>\r\n          <Input\r\n            id={this.filterInputId}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Walle\"\r\n          />\r\n          <Label htmlFor={this.filterInputId}>\r\n            <AiOutlineFileSearch size=\"30\" />\r\n            Find contacts by name\r\n          </Label>\r\n        </InputContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import Swal from \"sweetalert2\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Component } from \"react\";\r\nimport { Section } from \"./components/Section/Section\";\r\nimport { Container } from \"./components/Container/Container\";\r\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"./components/ContactList/ContactList\";\r\nimport { Filter } from \"./components/Filter/Filter\";\r\nimport { RiContactsBook2Fill, RiContactsFill } from \"react-icons/ri\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      { id: \"id-5\", name: \"Valentin Demchuk\", number: \"063-70-90-128\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  checkContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n\r\n    const includedName = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    const includedNumber = contacts.find(\r\n      (contact) =>\r\n        contact.number.replace(/[^0-9]/g, \"\") === number.replace(/[^0-9]/g, \"\")\r\n    );\r\n\r\n    if (includedName) {\r\n      return Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: `${name.toUpperCase()}\\nis already in contacts!`,\r\n        confirmButtonColor: \"indianred\",\r\n      });\r\n    }\r\n\r\n    if (includedNumber) {\r\n      return Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: `This number is already in contacts as\\n${includedNumber.name.toUpperCase()}`,\r\n        confirmButtonColor: \"indianred\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  handleFormSubmit = ({ name, number }) => {\r\n    const includedContact = this.checkContact(name, number);\r\n\r\n    if (includedContact) {\r\n      return;\r\n    }\r\n\r\n    const id = nanoid();\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, { id, name, number }],\r\n    }));\r\n  };\r\n\r\n  handleFilterInputChange = (value) => {\r\n    this.setState({ filter: value.toLowerCase() });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(filter) ||\r\n        contact.number.includes(filter)\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Section>\r\n          <Container>\r\n            <h1>\r\n              <RiContactsBook2Fill />\r\n              Phonebook\r\n            </h1>\r\n            <ContactForm onSubmit={this.handleFormSubmit} />\r\n            {contacts.length > 0 && (\r\n              <>\r\n                <h2>\r\n                  <RiContactsFill />\r\n                  Contacts\r\n                </h2>\r\n                <Filter onChange={this.handleFilterInputChange} />\r\n                <ContactList\r\n                  contacts={filteredContacts}\r\n                  onDeleteContact={this.deleteContact}\r\n                />\r\n              </>\r\n            )}\r\n          </Container>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}